#!/bin/bash

RIVERTILE=rivercarro
#RIVERTILE=rivertile

exec_once() {
    if ! pgrep -f "$1"
    then
        $@
    fi
}

spawn_yambar() {
    killall yambar

    monitors=$(wlr-randr | grep "^[^ ]" | awk '{ print$1 }')
    total=$(wlr-randr | grep "^[^ ]" | awk '{ print$1 }' | wc -l)

    for monitor in ${monitors}; do
        riverctl focus-output ${monitor}
        yambar &
        sleep 0.2
    done
    if [ "$total" -gt "1" ]; then
        riverctl focus-output DP-2
    fi
}

exec_always() {
    killall $1; $@
}

# wlr-randr --output DP-2     --mode 1920x1200              --pos 0,0       # top left
# wlr-randr --output HDMI-A-1 --mode 1920x1080              --pos 1920,1200 # bottom left
# wlr-randr --output DP-1     --mode 1920x1080@144.001007Hz --pos 0,1200    # bottom right


riverctl map normal Super+Shift Return spawn librewolf-bin
riverctl map normal Super Return spawn foot
riverctl map normal Super E spawn thunar
#riverctl map normal Super P spawn "tofi-drun --drun-launch=true"
riverctl map normal Super P spawn "fuzzel -I"

riverctl map normal Super W spawn $HOME/.local/scripts/powermenu.sh
riverctl map normal Super+Shift S spawn $HOME/.local/scripts/grimscreen.sh
riverctl map normal Super Z spawn 'sh -c "grim - | feh - --fullscreen --auto-zoom"'

riverctl map normal Super+Shift C close

riverctl map normal Super+Shift Q exit
riverctl map normal Super+Shift R spawn $HOME/.config/river/init

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super Down focus-view next
riverctl map normal Super Up focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift Down swap next
riverctl map normal Super+Shift Up swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output -current-tags next
riverctl map normal Super+Shift Comma send-to-output -current-tags previous
riverctl map normal Super O spawn 'sh -c "riverctl send-to-output -current-tags next && riverctl focus-output next"'

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super M zoom

# Super+H and Super+L to decrease/increase the main ratio of $RIVERTILE(1)
riverctl map normal Super Left send-layout-cmd $RIVERTILE "main-ratio -0.05"
riverctl map normal Super Right send-layout-cmd $RIVERTILE "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of $RIVERTILE(1)
riverctl map normal Super+Shift Left send-layout-cmd $RIVERTILE "main-count +1"
riverctl map normal Super+Shift Right send-layout-cmd $RIVERTILE "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
#riverctl map normal Super Space toggle-float
riverctl map normal Super Space send-layout-cmd rivercarro "main-location-cycle left,monocle"

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Set background and border color
riverctl background-color 0x1e1e2e
riverctl border-color-focused 0xb4befe
riverctl border-color-unfocused 0x1e1e2ee6
riverctl rule-add -app-id '*' ssd # server side decoration for every app

# cursor theme
riverctl xcursor-theme catppuccin-mocha-lavender-cursors

# INPUTS
riverctl input 'pointer-*' accel-profile flat
riverctl keyboard-layout eu
riverctl set-repeat 50 300
riverctl set-cursor-warp on-output-change

# Set the default layout generator to be $RIVERTILE and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout $RIVERTILE

#exec_always $RIVERTILE -view-padding 2 -outer-padding 0 &
exec_always $RIVERTILE -inner-gaps 2 -outer-gaps 2 -no-smart-gaps -per-tag &
exec_once kanshi &
spawn_yambar &
exec_once keepassxc &
exec_once nextcloud --background &
exec_once gammastep -l 54.3:13.1 -t 5700:4000 &
exec_once dbus-update-activation-environment --all &

#exec_once gsettings set org.gnome.desktop.interface cursor-theme catppuccin-mocha-lavender-cursors &

exec_always "$HOME/.local/scripts/catbg.sh" &

# needs to be handled differently
if ! pgrep wireplumber
then
    gentoo-pipewire-launcher restart &
fi
